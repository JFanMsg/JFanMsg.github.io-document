(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{379:function(a,s,t){"use strict";t.r(s);var e=t(45),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_3-docker之镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker之镜像"}},[a._v("#")]),a._v(" 3. docker之镜像")]),a._v(" "),t("h1",{attrs:{id:"镜像概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像概念"}},[a._v("#")]),a._v(" "),t("strong",[a._v("镜像概念")])]),a._v(" "),t("h2",{attrs:{id:"镜像是什么-一个准备好的系统镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像是什么-一个准备好的系统镜像"}},[a._v("#")]),a._v(" 镜像是什么 - 一个准备好的系统镜像")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("一个分层存储的文件")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("history")]),a._v(" nginx\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##用于查看镜像的分层信息")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("一个软件的环境")])]),a._v(" "),t("li",[t("p",[a._v("一个镜像可以创建N个容器(一个镜像可以创建多个容器，镜像可复用使用)")])]),a._v(" "),t("li",[t("p",[a._v("一种标准化的交付")])]),a._v(" "),t("li",[t("p",[a._v("一个不包含Linux内核而精简的linux操作系统")])]),a._v(" "),t("li",[t("p",[a._v("镜像不是一个单一的文件，而是有多层构成，可以通过docker hostory 镜像名，查看镜像中各层内容及大小，每层都对应着dockerfile中的一条指令")])]),a._v(" "),t("li",[t("p",[a._v("镜像也是容器的基石，容器是镜像的运行实例，有了镜像才能启动容器")])]),a._v(" "),t("li",[t("p",[a._v("每一个镜像都会有dockerfile文件，定义了如何构建docker镜像")])]),a._v(" "),t("li",[t("p",[a._v("base镜像----提供了一个基本的操作系统环境，用户可以根据需要安装和配置软件")])]),a._v(" "),t("li",[t("p",[a._v("base镜像通常是各种Linux发行版的Docker镜像比如ubuntu、Debian、centos等。")])]),a._v(" "),t("li",[t("p",[a._v("base镜像只是在用户空间与发行版一致，kernel版本与发行版是不同的。比如说虚机系统是ubuntu14.04，运行一个容器是centos系统的，那么centos使用的其实就是本虚机的kernel。 容器只能使用本地虚机的kernel且不能修改。")])]),a._v(" "),t("li",[t("p",[a._v("镜像的分层结构：DockerHub中绝大多数的镜像都是通过在base镜像中安装和配置需要的软件构建出来的。")])]),a._v(" "),t("li",[t("p",[a._v("base镜像是from scratch开始，新镜像是直接在base镜像上构建from centos...... 新镜像是从base镜像一层一层叠加生成的，每安装一个软件就等于在现有的镜像上增加一层。")])]),a._v(" "),t("li",[t("p",[a._v("Docker镜像采用分层结构的好处就是共享资源。")])]),a._v(" "),t("li",[t("p",[a._v("可写的容器层：当容器启动时，一个新的可写层被加载到镜像的顶部，这一层就叫容器层，容器层之下都叫镜像层。")])]),a._v(" "),t("li",[t("p",[a._v("只有容器层是可写的，容器层下面的所有镜像层都是只读的。对容器的任何改动都只会发生在容器层中。")])]),a._v(" "),t("li",[t("p",[a._v("这里，所有的镜像层联合一起组成一个统一的文件系统，用户在容器层看到的就是一个叠加之后的文件系统。")])])]),a._v(" "),t("p",[t("strong",[a._v("镜像层内部是有上下之分的：")])]),a._v(" "),t("ol",[t("li",[a._v("添加文件：在容器中创建文件时，新文件被添加到容器层中。")]),a._v(" "),t("li",[a._v("读取文件：当在容器中读取某个文件时，Docker会从上往下依次在各镜像层中查找此文件，一旦找到打开并读入内存。")]),a._v(" "),t("li",[a._v("修改文件：在容器中修改已存在的文件时，Docker会从上往下依次在各个镜像层中查找此文件，一旦找到立即将其复制到容器层中，然后才修改。（copy-on-write特性）")]),a._v(" "),t("li",[a._v("删除文件：在容器中删除文件时，Docker会从上往下依次在镜像层中找，找到后，会在容器层记录下此删除操作。 copy-on-write特性说明容器层保存的是镜像变化的部分，不会对镜像本身进行任何修改。所以镜像可以被多个容器共享。")])]),a._v(" "),t("p",[a._v("docker镜像默认存储在/var/lib/docker/overlay2/")]),a._v(" "),t("h2",{attrs:{id:"镜像与容器的联系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像与容器的联系"}},[a._v("#")]),a._v(" 镜像与容器的联系")]),a._v(" "),t("p",[a._v("容器是在镜像的最上面加了一层读写层，在运行容器里文件改动时，会先从镜像里面要写的文件复制到容器的读写层上，也是就容器自身的文件系统中")]),a._v(" "),t("p",[a._v("如果容器删除了，最上面的读写层也就删除了，改动的也就丢失了，所以无论多少容器共享一个镜像，对容器所做的所有操作都是从镜像中的文件系统复制到容器的读写层上操作的，并不会修改镜像的源文件，这种方式也是反向着提高磁盘利用率")]),a._v(" "),t("p",[a._v("若想持久化这些改动，可以通过docker命令 (docker commit) 将容器保存成一个全新的镜像")]),a._v(" "),t("p",[a._v("一个镜像创建多少容器，镜像增量式存储，创建的容器里面修改不会影响到镜像")]),a._v(" "),t("p",[a._v("容器的可写层存储路径：/var/lib/docker/containers/镜像的ID")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://s1.ax1x.com/2020/04/14/GxhpM4.png",alt:"GxhpM4.png"}})]),a._v(" "),t("h1",{attrs:{id:"镜像常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像常用命令"}},[a._v("#")]),a._v(" "),t("strong",[a._v("镜像常用命令")])]),a._v(" "),t("h2",{attrs:{id:"查看镜像-ls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看镜像-ls"}},[a._v("#")]),a._v(" 查看镜像 - ls")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" 镜像名\n选项：-a\n\tdocker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" 镜像名 -a\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##查看所有镜像")]),a._v("\n")])])]),t("h2",{attrs:{id:"查看镜像分层-查看镜像历史-history"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看镜像分层-查看镜像历史-history"}},[a._v("#")]),a._v(" 查看镜像分层-(查看镜像历史) - history")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("history")]),a._v(" 镜像名/镜像ID\n")])])]),t("h2",{attrs:{id:"查看镜像的详细信息-inspect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看镜像的详细信息-inspect"}},[a._v("#")]),a._v(" 查看镜像的详细信息 - inspect")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image inspect 镜像名/镜像ID\n")])])]),t("h2",{attrs:{id:"向docker仓库拉取镜像-pull"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#向docker仓库拉取镜像-pull"}},[a._v("#")]),a._v(" 向docker仓库拉取镜像 - pull")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image pull 镜像名\n")])])]),t("h2",{attrs:{id:"推送镜像到镜像仓库-push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推送镜像到镜像仓库-push"}},[a._v("#")]),a._v(" 推送镜像到镜像仓库 - push")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image push 镜像名\n")])])]),t("h2",{attrs:{id:"删除一个镜像-rm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除一个镜像-rm"}},[a._v("#")]),a._v(" 删除一个镜像 - rm")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" 镜像ID\n选项：-f\n\tdocker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -f 镜像ID\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## -f选项强制删除")]),a._v("\n")])])]),t("h2",{attrs:{id:"清除悬空镜像-悬空镜像就是没有标签名也没容器引用的镜像-prune"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除悬空镜像-悬空镜像就是没有标签名也没容器引用的镜像-prune"}},[a._v("#")]),a._v(" 清除悬空镜像（悬空镜像就是没有标签名也没容器引用的镜像）- prune")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image prune 镜像名\n选项：-a\n\tdocker image prune 镜像名 -a\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## -a 选项删除没有引用容器的镜像")]),a._v("\n")])])]),t("h2",{attrs:{id:"创建一个引用源镜像标记目标镜像-tag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建一个引用源镜像标记目标镜像-tag"}},[a._v("#")]),a._v(" 创建一个引用源镜像标记目标镜像 - tag")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image tag \n")])])]),t("h2",{attrs:{id:"导出容器文件系统到tar归档文件-export"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导出容器文件系统到tar归档文件-export"}},[a._v("#")]),a._v(" 导出容器文件系统到tar归档文件 - export")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" \n")])])]),t("h2",{attrs:{id:"导入容器文件系统tar归档文件出创建镜像-import"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导入容器文件系统tar归档文件出创建镜像-import"}},[a._v("#")]),a._v(" 导入容器文件系统tar归档文件出创建镜像 - import")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("import")]),a._v(" \n")])])]),t("h2",{attrs:{id:"导出或保存一个或多个镜像到一个tar归档文件到当前目录-save"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导出或保存一个或多个镜像到一个tar归档文件到当前目录-save"}},[a._v("#")]),a._v(" 导出或保存一个或多个镜像到一个tar归档文件到当前目录 - save")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image save 镜像名 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" 导出的镜像文件名.tar\n")])])]),t("h2",{attrs:{id:"导入或加载镜像是来自tar归档或标准输出-load"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导入或加载镜像是来自tar归档或标准输出-load"}},[a._v("#")]),a._v(" 导入或加载镜像是来自tar归档或标准输出 - load")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("docker image load "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" 备份的镜像文件名.tar\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);