(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{426:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_13-编码跟解码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-编码跟解码"}},[t._v("#")]),t._v(" 13. 编码跟解码")]),t._v(" "),a("h1",{attrs:{id:"编码跟解码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编码跟解码"}},[t._v("#")]),t._v(" 编码跟解码")]),t._v(" "),a("h2",{attrs:{id:"编码表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编码表"}},[t._v("#")]),t._v(" 编码表")]),t._v(" "),a("h3",{attrs:{id:"ascii-编码表-嘛死特"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ascii-编码表-嘛死特"}},[t._v("#")]),t._v(" ASCII 编码表-(嘛死特)")]),t._v(" "),a("p",[t._v("最早的编码，编码表中只有英文、大小写字母、数字、一些特殊字符")]),t._v(" "),a("p",[t._v("使用8位进制来表示：8位 = 1字节，由一个字节来表示")]),t._v(" "),a("p",[t._v("ascii编码只支持英文，不支持中文")]),t._v(" "),a("p",[t._v("python2默认使用ascii编码")]),t._v(" "),a("h3",{attrs:{id:"gbk-国标码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gbk-国标码"}},[t._v("#")]),t._v(" GBK 国标码")]),t._v(" "),a("p",[t._v("在国标码的编码表中包含了，ASCII 编码和中文常用的编码")]),t._v(" "),a("p",[t._v("使用16位进制来表示：8位 = 1字节，由二个字节来表示")]),t._v(" "),a("h3",{attrs:{id:"unicode-万国码-u呢扣特"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unicode-万国码-u呢扣特"}},[t._v("#")]),t._v(" UNICODE 万国码-(U呢扣特)")]),t._v(" "),a("p",[t._v("在万国码的编码表中包含了全世界所有国家文字的编码")]),t._v(" "),a("p",[t._v("使用32位进制来表示：32位 = 4字节，由四个字节来表示")]),t._v(" "),a("p",[t._v("unicode万国码支持全球所有语言")]),t._v(" "),a("h3",{attrs:{id:"utf-8-对unicode万国码进行压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#utf-8-对unicode万国码进行压缩"}},[t._v("#")]),t._v(" utf-8 (对unicode万国码进行压缩)")]),t._v(" "),a("p",[t._v("把unicode万国码表示32位进制，每8位进制为一单位，如果单位没有被使用，就会被压缩掉")]),t._v(" "),a("p",[t._v("utf-8 最少用1字节 = 8位，最多用4字节 = 32位表示")]),t._v(" "),a("ol",[a("li",[t._v("英文：8bit  1byte，1字节 = 8位")]),t._v(" "),a("li",[t._v("欧洲文字:16bit 2byte，2字节 = 16位")]),t._v(" "),a("li",[t._v("中文:24bit 3byte，3字节 = 24位")])]),t._v(" "),a("p",[t._v("python3默认使用utf-8编码")]),t._v(" "),a("h3",{attrs:{id:"文件编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件编码"}},[t._v("#")]),t._v(" 文件编码")]),t._v(" "),a("p",[t._v("以什么编码保存，就要用什么编码方式打开，否则就会出现乱码")]),t._v(" "),a("p",[t._v("建议：在编写文件时，文件编码要使用utf-8格式")]),t._v(" "),a("h2",{attrs:{id:"python2支持utf-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python2支持utf-8"}},[t._v("#")]),t._v(" python2支持utf-8")]),t._v(" "),a("p",[t._v("pythjon2中默认使用的ASCII码，所以不支持中文，如果需要在python2中更改编码，只需要在文件的头部加上一句")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -*- coding:utf-8 -*-")]),t._v("\n")])])]),a("p",[t._v("这样python2就把默认使用ascii编码改为utf-8编码")]),t._v(" "),a("h2",{attrs:{id:"使用编码转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用编码转换"}},[t._v("#")]),t._v(" 使用编码转换")]),t._v(" "),a("p",[t._v("在python3中，内存在程序运行阶段，使用的是unicode编码，因为unicode是万国码，什么内容都可以进行显示，那么在数据传输和存储的时候由于unicode比较浪费空间和资源，需要把unicode转存成UTF-8或GBK进行存储，怎么转换呢，在python中可以把文字信息进行编码，编码之后的内容就可以进行传输了，编码之后的数据是BYTES(bytes)类型，也还是原来的数据只是经过编码之后表现形式发生改变而已")]),t._v(" "),a("p",[t._v("bytes的表现形式：")]),t._v(" "),a("ol",[a("li",[t._v("英文：b'hello' 英文的表现形式和字符串没什么区别")]),t._v(" "),a("li",[t._v("中文： b'\\xe4\\xb8\\xad'  这是一个汉字的UTF-8的bytes表现形式")])]),t._v(" "),a("h3",{attrs:{id:"编码转换-encode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编码转换-encode"}},[t._v("#")]),t._v(" 编码转换 - encode()")]),t._v(" "),a("p",[t._v("英文编码转换之后的结果和源字符串一致")]),t._v(" "),a("p",[t._v("中文编码转换之后 的结果根据编码的不同，编码结果也不同，一个中文的UTF-8编码是3个字节，一个GBK的中文编码是2个字节，")]),t._v(" "),a("p",[t._v("编码转换之后的类型就是bytes类型")]),t._v(" "),a("p",[t._v("在网络传输和存储的时候，python是保存和存储的bytes类型数据，那么在对方接收的时候，也是接收的bytes类型的数据，就需要使用decode() 来进行解码操作，把bytes类型的数据还原成熟悉的字符串")]),t._v(" "),a("p",[t._v("格式：变量.encode(编码格式) 或 变量 = 变量.encode(编码格式)")]),t._v(" "),a("p",[a("strong",[t._v("英文")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"holle"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("b'holle'")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，把变量中的字符串进行转编码，转换成bytes类型的数据")]),t._v(" "),a("p",[a("strong",[t._v("中文")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("b'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd'")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，把变量中的字符串进行转编码，转换成bytes类型的数据")]),t._v(" "),a("h2",{attrs:{id:"使用解码转换-decode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用解码转换-decode"}},[t._v("#")]),t._v(" 使用解码转换 - decode()")]),t._v(" "),a("p",[t._v("接收的bytes类型的数据，就需要使用decode() 来进行解码操作，把bytes类型的数据还原成熟悉的字符串")]),t._v(" "),a("p",[t._v("格式：变量.decode(编码格式) 或 变量 = 变量.decode(编码格式)")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好"')]),t._v("\nwo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("b'\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd'")]),t._v("\n你好\n")])])]),a("p",[t._v("​\t以上实例，使用了编码转换跟解码转换的二个函数，简单实现了文件传输的编码转换跟解码转换")])])}),[],!1,null,null,null);s.default=e.exports}}]);