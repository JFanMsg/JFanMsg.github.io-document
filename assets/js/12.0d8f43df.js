(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{372:function(t,s,a){"use strict";a.r(s);var e=a(45),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_6-kubernetes之深入理解pod对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-kubernetes之深入理解pod对象"}},[t._v("#")]),t._v(" 6. Kubernetes之深入理解Pod对象")]),t._v(" "),a("h1",{attrs:{id:"pod对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod对象"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Pod对象")])]),t._v(" "),a("ol",[a("li",[t._v("最小部署单元")]),t._v(" "),a("li",[t._v("一组容器的集合")]),t._v(" "),a("li",[t._v("一个Pod中的容器共享网络命名空间")]),t._v(" "),a("li",[t._v("Pod是短暂的")])]),t._v(" "),a("h2",{attrs:{id:"pod中如何管理多个容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod中如何管理多个容器"}},[t._v("#")]),t._v(" Pod中如何管理多个容器")]),t._v(" "),a("ol",[a("li",[t._v("Pod中可以同时运行多个进程（作为容器运行）协同工作。")]),t._v(" "),a("li",[t._v("同一个Pod中的容器会自动的分配到同一个 node 上。")]),t._v(" "),a("li",[t._v("同一个Pod中的容器共享资源、网络环境和依赖，它们总是被同时调度。")])]),t._v(" "),a("p",[t._v("注意在一个Pod中同时运行多个容器是一种比较高级的用法")]),t._v(" "),a("ol",[a("li",[t._v("只有当你的容器需要紧密配合协作的时候才考虑用这种模式")]),t._v(" "),a("li",[t._v("例如，你有一个容器作为web服务器运行，需要用到共享的volume，有另一个“sidecar”容器来从远端获取资源更新这些文件，如下图所示")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/linux91/document-img/raw/master/img/J4ddFf.png",alt:"J4ddFf.png"}})]),t._v(" "),a("h2",{attrs:{id:"pod中可以共享两种资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod中可以共享两种资源"}},[t._v("#")]),t._v(" Pod中可以共享两种资源")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("网络：")]),t._v(" "),a("ol",[a("li",[t._v("每个Pod都会被分配一个唯一的IP地址。")]),t._v(" "),a("li",[t._v("Pod中的所有容器共享网络空间，包括IP地址和端口。")]),t._v(" "),a("li",[t._v("Pod内部的容器可以使用localhost(主机名)互相通信。")]),t._v(" "),a("li",[t._v("Pod中的容器与外界通信时，必须分配共享网络资源（例如使用宿主机的端口映射）。")])])]),t._v(" "),a("li",[a("strong",[t._v("存储：")]),t._v(" "),a("ol",[a("li",[t._v("可以Pod指定多个共享的Volume。")]),t._v(" "),a("li",[t._v("Pod中的所有容器都可以访问共享的volume。")]),t._v(" "),a("li",[t._v("Volume也可以用来持久化Pod中的存储资源，以防容器重启后文件丢失")])])])]),t._v(" "),a("h1",{attrs:{id:"pod容器分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod容器分类"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Pod容器分类")])]),t._v(" "),a("ol",[a("li",[t._v("Infrastructure Container：基础容器，维护整个Pod网络空间")]),t._v(" "),a("li",[t._v("InitContainers：初始化容器，先于业务容器开始执行")]),t._v(" "),a("li",[t._v("Containers：业务容器，并行启动")])]),t._v(" "),a("h1",{attrs:{id:"镜像拉取策略-imagepullpolicy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像拉取策略-imagepullpolicy"}},[t._v("#")]),t._v(" "),a("strong",[t._v("镜像拉取策略（imagePullPolicy）")])]),t._v(" "),a("ol",[a("li",[t._v("IfNotPresent：默认值，镜像在宿主机上不存在时才拉取")]),t._v(" "),a("li",[t._v("Always：每次创建Pod 都会重新拉取一次镜像")]),t._v(" "),a("li",[t._v("Never：Pod 永远不会主动拉取这个镜像")])]),t._v(" "),a("h2",{attrs:{id:"镜像拉取策略-局部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像拉取策略-局部"}},[t._v("#")]),t._v(" 镜像拉取策略 - 局部")]),t._v(" "),a("ol",[a("li",[t._v("写在containers中，只针对containers中的镜像拉取策略生成")]),t._v(" "),a("li",[t._v("就相当于编程中的局部配置跟全局配置一样")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" awesomeapps\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" janedoe/awesomeapp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent \n")])])]),a("h2",{attrs:{id:"镜像拉取策略-全局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像拉取策略-全局"}},[t._v("#")]),t._v(" 镜像拉取策略 - 全局")]),t._v(" "),a("ol",[a("li",[t._v("写在spec中，只针对spec所有的containers中的镜像拉取策略生成")]),t._v(" "),a("li",[t._v("就相当于编程中的局部配置跟全局配置一样")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" awesomeapps\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" janedoe/awesomeapp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v1\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myregistrykey\n")])])]),a("h1",{attrs:{id:"资源限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源限制"}},[t._v("#")]),t._v(" "),a("strong",[t._v("资源限制")])]),t._v(" "),a("p",[t._v("官方相关文档地址：https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/")]),t._v(" "),a("ol",[a("li",[t._v("创建Pod的时候，可以指定计算资源（目前支持的资源类型有CPU和内存），即指定每个容器的资源请求（Request）和资源限制（Limit），资源请求是容器所需的最小资源需求，资源限制则是容器不能超过的资源上限。它们的大小关系是：0<=request<=limit<=infinity")]),t._v(" "),a("li",[t._v("Pod的资源请求就是Pod中容器资源请求之和。Kubernetes在调度Pod时，会根据Node中的资源总量（通过cAdvisor接口获得），以及该Node上已使用的计算资源，来判断该Node是否满足需求。")]),t._v(" "),a("li",[t._v("资源请求能够保证Pod有足够的资源来运行，而资源限制则是防止某个Pod无限制地使用资源，导致其他Pod崩溃。特别是在公有云场景，往往会有恶意软件通过抢占内存来攻击平台。")]),t._v(" "),a("li",[t._v("原理：Docker 通过使用Linux Cgroup来实现对容器资源的控制，具体到启动参数上是--memory和--cpu-shares。Kubernetes中是通过控制这两个参数来实现对容器资源的控制。")])]),t._v(" "),a("h2",{attrs:{id:"pod和container的资源请求和限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod和container的资源请求和限制"}},[t._v("#")]),t._v(" Pod和Container的资源请求和限制")]),t._v(" "),a("ol",[a("li",[t._v("spec.containers[].resources.limits.cpu")]),t._v(" "),a("li",[t._v("spec.containers[].resources.limits.memory")]),t._v(" "),a("li",[t._v("spec.containers[].resources.requests.cpu")]),t._v(" "),a("li",[t._v("spec.containers[].resources.requests.memory")])]),t._v(" "),a("h2",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" "),a("strong",[t._v("实例")])]),t._v(" "),a("p",[t._v("以下Pod有两个容器")]),t._v(" "),a("ol",[a("li",[t._v("每个Container都有0.25 cpu和64MiB内存的请求。")]),t._v(" "),a("li",[t._v("每个Container的内存限制为0.5 cpu和128MiB。")]),t._v(" "),a("li",[t._v("你可以说Pod有0.5 cpu和128 MiB内存的请求，并且限制为1 cpu和256MiB的内存")])]),t._v(" "),a("p",[t._v("以下是yaml文件")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" db\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MYSQL_ROOT_PASSWORD\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"64Mi"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"250m"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"128Mi"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"500m"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wp\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wordpress\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"64Mi"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"250m"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"128Mi"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"500m"')]),t._v("\n")])])]),a("h3",{attrs:{id:"查看node节点资源使用情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看node节点资源使用情况"}},[t._v("#")]),t._v(" 查看node节点资源使用情况")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl describe pod frontend "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -A "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" Events\nEvents:\n  Type     Reason          Age                From                    Message\n  ----     ------          ----               ----                    -------\n  Normal   Scheduled       19m                default-scheduler       Successfully assigned default/frontend to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.125\n  \n\n\nkubectl describe nodes "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.125\n---------                  ----                                  ------------  ----------  ---------------  -------------  ---\n  default                    frontend                              500m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     128Mi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       256Mi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     20m\n  default                    tomcat-deployment-6bb6864d4f-drcjc    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         3h25m\n  default                    tomcat-deployment-6bb6864d4f-wmkxx    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         3h25m\nAllocated resources:\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Total limits may be over "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" percent, i.e., overcommitted."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                500m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  memory             128Mi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  256Mi "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ephemeral-storage  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因输出的内容太多了,所以我只截了部分可看的内容")]),t._v("\n")])])]),a("h1",{attrs:{id:"重启策略-restartpolicy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重启策略-restartpolicy"}},[t._v("#")]),t._v(" "),a("strong",[t._v("重启策略（restartPolicy）")])]),t._v(" "),a("ol",[a("li",[t._v("Always：当容器终止退出后，总是重启容器，默认策略。")]),t._v(" "),a("li",[t._v("OnFailure：当容器异常退出（退出状态码非0）时，才重启容器。")]),t._v(" "),a("li",[t._v("Never：当容器终止退出，从不重启容器")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" awesomeapps\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" foo\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" janedoe/awesomeapp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v1\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 一般都是使用默认的Always")]),t._v("\n")])])]),a("h1",{attrs:{id:"健康检查-probe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#健康检查-probe"}},[t._v("#")]),t._v(" "),a("strong",[t._v("健康检查（Probe）")])]),t._v(" "),a("p",[t._v("官方相关文档地址：https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/")]),t._v(" "),a("ol",[a("li",[t._v("在实际生产环境中，想要使得开发的应用程序完全没有bug，在任何时候都运行正常，几乎是不可能的任务。")]),t._v(" "),a("li",[t._v("因此，我们需要一套管理系统，来对用户的应用程序执行周期性的健康检查和修复操作。")]),t._v(" "),a("li",[t._v("这套管理系统必须运行在应用程序之外，这一点非常重要一一如果它是应用程序的一部分，极有可能会和应用程序一起崩溃。")]),t._v(" "),a("li",[t._v("因此，在Kubernetes中，系统和应用程序的健康检查是由Kubelet来完成的。")])]),t._v(" "),a("h2",{attrs:{id:"二种健康检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二种健康检查"}},[t._v("#")]),t._v(" 二种健康检查")]),t._v(" "),a("ol",[a("li",[t._v("进程级健康检查\n"),a("ol",[a("li",[t._v("最简单的健康检查是进程级的健康检查，即检验容器进程是否存活。")]),t._v(" "),a("li",[t._v("这类健康检查的监控粒度是在Kubernetes集群中运行的单一容器。")]),t._v(" "),a("li",[t._v("Kubelet会定期通过Docker Daemon获取所有Docker进程的运行情况，如果发现某个Docker容器未正常运行，则重新启动该容器进程。")]),t._v(" "),a("li",[t._v("目前，进程级的健康检查都是默认启用的。")])])]),t._v(" "),a("li",[t._v("业务级健康检查\n"),a("ol",[a("li",[t._v("在很多实际场景下，仅仅使用进程级健康检查还远远不够。")]),t._v(" "),a("li",[t._v("有时，从Docker的角度来看，容器进程依旧在运行")]),t._v(" "),a("li",[t._v("但是如果从应用程序的角度来看，代码处于死锁状态，")]),t._v(" "),a("li",[t._v("即容器永远都无法正常响应用户的业务为了解决以上问题")]),t._v(" "),a("li",[t._v("Kubernetes引人了一个在容器内执行的活性探针的概念，以支持用户自己实现应用业务级的健康检查")])])])]),t._v(" "),a("h2",{attrs:{id:"probe有以下两种类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#probe有以下两种类型"}},[t._v("#")]),t._v(" Probe有以下两种类型")]),t._v(" "),a("ol",[a("li",[t._v("livenessProbe：如果检查失败，将杀死容器，根据Pod的restartPolicy来操作。")]),t._v(" "),a("li",[t._v("readinessProbe：如果检查失败，Kubernetes会把Pod从service endpoints中剔除")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/linux91/document-img/raw/master/img/J5M50e.png",alt:"J5M50e.png"}})]),t._v(" "),a("h2",{attrs:{id:"probe支持三种检查方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#probe支持三种检查方法"}},[t._v("#")]),t._v(" Probe支持三种检查方法")]),t._v(" "),a("ol",[a("li",[t._v("Exec(ExecAction)：在容器内执行指定命令。如果命令退出时返回码为 0 则认为诊断成功。")]),t._v(" "),a("li",[t._v("TCPSocket(TCPSocketAction)：对指定端口上的容器的 IP 地址进行 TCP 检查。如果端口打开，则诊断被认为是成功的。")]),t._v(" "),a("li",[t._v("HTTPGet(HTTPGetAction)：对指定的端口和路径上的容器的 IP 地址执行 HTTP Get 请求。如果响应的状态码大于等于200 且小于 400，则诊断被认为是成功的。")])]),t._v(" "),a("h2",{attrs:{id:"一些简单的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些简单的参数"}},[t._v("#")]),t._v(" 一些简单的参数")]),t._v(" "),a("ol",[a("li",[t._v("exec  command 的方式探测 例如 ps 一个进程")]),t._v(" "),a("li",[t._v("failureThreshold 探测几次失败 才算失败 默认是连续三次")]),t._v(" "),a("li",[t._v("periodSeconds 每次的多长时间探测一次  默认10s")]),t._v(" "),a("li",[t._v("timeoutSeconds 探测超市的秒数 默认1s")]),t._v(" "),a("li",[t._v("initialDelaySeconds  初始化延迟探测，第一次探测的时候，因为主程序未必启动完成")]),t._v(" "),a("li",[t._v("tcpSocket 检测端口的探测")]),t._v(" "),a("li",[t._v("httpGet http请求探测")])]),t._v(" "),a("h2",{attrs:{id:"exec探针检查方式的示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exec探针检查方式的示例"}},[t._v("#")]),t._v(" "),a("strong",[t._v("exec探针检查方式的示例")])]),t._v(" "),a("h3",{attrs:{id:"编写yaml文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写yaml文件"}},[t._v("#")]),t._v(" 编写yaml文件")]),t._v(" "),a("p",[t._v("在yaml配置文件中，您可以看到Pod具有单个Container")]),t._v(" "),a("ol",[a("li",[t._v("该periodSeconds字段指定kubelet应每5秒执行一次活跃度探测。")]),t._v(" "),a("li",[t._v("该initialDelaySeconds字段告诉kubelet它应该在执行第一次探测之前等待5秒。")]),t._v(" "),a("li",[t._v("要执行探测，kubelet将cat /tmp/healthy在Container中执行命令。")]),t._v(" "),a("li",[t._v("如果命令成功，则返回0，并且kubelet认为Container是活动且健康的。")]),t._v(" "),a("li",[t._v("如果该命令返回非零值，则kubelet会终止Container并重新启动它")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("exec\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /bin/sh\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" touch /tmp/healthy; sleep 30; rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rf /tmp/healthy; sleep 600\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/healthy\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),a("h3",{attrs:{id:"使用yaml文件生成示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用yaml文件生成示例"}},[t._v("#")]),t._v(" 使用yaml文件生成示例")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create -f exec-liveness.yaml \npod/liveness-exec created\n\n\nkubectl get pod\nNAME                                 READY   STATUS    RESTARTS   AGE\nfrontend                             "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("106")]),t._v("        16h\nliveness-exec                        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          16s\n")])])]),a("p",[a("strong",[t._v("再等30秒，确认Container已重新启动，RESTARTS已增加")])]),t._v(" "),a("h1",{attrs:{id:"kubernetes中pod创建流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes中pod创建流程"}},[t._v("#")]),t._v(" "),a("strong",[t._v("kubernetes中pod创建流程")])]),t._v(" "),a("ol",[a("li",[t._v("Pod是Kubernetes中最基本的部署调度单元，可以包含container，逻辑上表示某种应用的一个实例。")]),t._v(" "),a("li",[t._v("例如一个web站点应用由前端、后端及数据库构建而成，这三个组件将运行在各自的容器中，那么我们可以创建包含三个container的pod")]),t._v(" "),a("li",[t._v("以下是创建流程图")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s1.ax1x.com/2020/04/28/J4yRKS.png",alt:"J4yRKS.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s1.ax1x.com/2020/04/28/J5JXPe.png",alt:"J5JXPe.png"}})]),t._v(" "),a("ol",[a("li",[t._v("客户端提交创建请求：\n"),a("ol",[a("li",[t._v("可以通过API Server的Restful API，也可以使用kubectl命令行工具。")]),t._v(" "),a("li",[t._v("支持的数据类型包括JSON和YAML。")])])]),t._v(" "),a("li",[t._v("API Server：处理用户请求，存储Pod数据到etcd。")]),t._v(" "),a("li",[t._v("调度器：通过API Server查看未绑定的Pod，尝试为Pod分配主机。")]),t._v(" "),a("li",[t._v("过滤主机 (调度预选)：\n"),a("ol",[a("li",[t._v("调度器用一组规则过滤掉不符合要求的主机。")]),t._v(" "),a("li",[t._v("比如Pod指定了所需要的资源量，那么可用资源比Pod需要的资源量少的主机会被过滤掉。")])])]),t._v(" "),a("li",[t._v("主机打分(调度优选)：\n"),a("ol",[a("li",[t._v("对第一步筛选出的符合要求的主机进行打分，在主机打分阶段，调度器会考虑一些整体优化策略")]),t._v(" "),a("li",[t._v("比如把容一个Replication Controller的副本分布到不同的主机上，使用最低负载的主机等。")])])]),t._v(" "),a("li",[t._v("选择主机：选择打分最高的主机，进行binding操作，结果存储到etcd中。")]),t._v(" "),a("li",[t._v("kubelet根据调度结果执行Pod创建操作：\n"),a("ol",[a("li",[t._v("绑定成功后，scheduler会调用APIServer的API在etcd中创建一个boundpod对象，描述在一个工作节点上绑定运行的所有pod信息。")]),t._v(" "),a("li",[t._v("运行在每个工作节点上的kubelet也会定期与etcd同步boundpod信息，一旦发现应该在该工作节点上运行的boundpod对象没有更新，则调用Docker API创建并启动pod内的容器。")])])])]),t._v(" "),a("h1",{attrs:{id:"调度约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调度约束"}},[t._v("#")]),t._v(" "),a("strong",[t._v("调度约束")])]),t._v(" "),a("p",[t._v("官方相关文档地址：https://kubernetes.io/docs/concepts/configuration/assign-pod-node/")]),t._v(" "),a("p",[t._v("可以约束"),a("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pod"),a("OutboundLink")],1),t._v("只能在特定"),a("a",{attrs:{href:"https://kubernetes.io/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("节点"),a("OutboundLink")],1),t._v("上运行 ，或者更喜欢在特定节点上运行")]),t._v(" "),a("ol",[a("li",[t._v("有几种方法可以做到这一点，推荐的方法都使用 "),a("a",{attrs:{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",target:"_blank",rel:"noopener noreferrer"}},[t._v("标签选择器"),a("OutboundLink")],1),t._v("进行选择。")]),t._v(" "),a("li",[t._v("通常，此类约束是不必要的，因为调度程序会自动进行合理的放置\n"),a("ol",[a("li",[t._v("例如，将Pod分散到节点上，而不是将Pod放置在可用资源不足的节点上，等等")])])]),t._v(" "),a("li",[t._v("但是在某些情况下，您可能需要更多控制一个Pod降落的节点，\n"),a("ol",[a("li",[t._v("例如，以确保Pod最终落在连接了SSD的机器上，或将来自两个不同服务的Pod共同放置在一个可用区域中，这些服务之间的通信量很大")])])])]),t._v(" "),a("h2",{attrs:{id:"调度器的工作机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调度器的工作机制"}},[t._v("#")]),t._v(" 调度器的工作机制")]),t._v(" "),a("ol",[a("li",[t._v("预备工作\n"),a("ol",[a("li",[t._v("缓存所有的node节点，记录他们的规格：cpu、内存、磁盘空间、gpu显卡数等；")]),t._v(" "),a("li",[t._v("缓存所有运行中的pod，按照pod所在的node进行区分，统计每个node上的pod request了多少资源。request是pod的QoS配置。")]),t._v(" "),a("li",[t._v("list & watch pod资源，当检查到有新的Pending状态的pod出现，就将它加入到调度队列中。")]),t._v(" "),a("li",[t._v("调度器的worker组件从队列中取出pod进行调度。")])])]),t._v(" "),a("li",[t._v("调度过程\n"),a("ol",[a("li",[t._v("先将当前所有的node放入队列；")]),t._v(" "),a("li",[t._v("执行predicates算法，对队列中的node进行筛选。这里算法检查了一些pod运行的必要条件，包括port不冲突、cpu和内存资源QoS（如果有的话）必须满足、挂载volume（如果有的话）类型必须匹配、nodeSelector规则必须匹配、硬性的affinity规则（下文会提到）必须匹配、node的状态（condition）必须正常，taint_toleration硬规则（下文会提到）等等。")]),t._v(" "),a("li",[t._v("执行priorities算法，对队列中剩余的node进行评分，这里有许多评分项，各个项目有各自的权重：整体cpu，内存资源的平衡性、node上是否有存在要求的镜像、同rs的pod是否有调度、node affinity的软规则、taint_toleration软规则（下文会提到）等等。")]),t._v(" "),a("li",[t._v("最终评分最高的node会被选出。即代码中suggestedHost, err := sched.schedule(pod)一句（plugin/pkg/scheduler/scheduler.go）的返回值。")]),t._v(" "),a("li",[t._v("调度器执行assume方法，该方法在pod调度到node之前，就以“该pod运行在目标node上” 为场景更新调度器缓存中的node 信息，也即预备工作中的1、2两点。这么做是为了让pod在真正调度到node上时，调度器也可以同时做后续其他pod的调度工作。")]),t._v(" "),a("li",[t._v("调度器执行bind方法，该方法创建一个Binding资源，apiserver检查到创建该资源时，会主动更新pod的nodeName字段。完成调度")])])])]),t._v(" "),a("h2",{attrs:{id:"调度约束的二种机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调度约束的二种机制"}},[t._v("#")]),t._v(" "),a("strong",[t._v("调度约束的二种机制")])]),t._v(" "),a("ol",[a("li",[t._v("nodeName用于将Pod调度到指定的Node名称上")]),t._v(" "),a("li",[t._v("nodeSelector用于将Pod调度到匹配Label的Node上")])]),t._v(" "),a("h3",{attrs:{id:"nodename-强制指定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodename-强制指定"}},[t._v("#")]),t._v(" nodeName - 强制指定")]),t._v(" "),a("p",[a("strong",[t._v("nodeName用于将Pod调度到指定的Node名称")])]),t._v(" "),a("p",[t._v("spec.nodeName用于强制约束将Pod调度到指定的Node节点上，这里说是“调度”，但其实指定了nodeName的Pod会直接跳过Scheduler的调度逻辑，直接写入PodList列表，该匹配规则是强制匹配")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("example\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 192.168.0.125\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.15")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create -f pod3.yaml \npod/pod-example created\n\n\nkubectl get pod\nNAME          READY   STATUS    RESTARTS   AGE\nnginx         "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          10m\npod-example   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          22s\n\n\nkubectl describe pod pod-example\n  Type    Reason   Age   From                    Message\n  ----    ------   ----  ----                    -------\n  Normal  Pulled   31s   kubelet, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.125  Container image "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx:1.15"')]),t._v(" already present on machine\n  Normal  Created  31s   kubelet, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.125  Created container\n  Normal  Started  30s   kubelet, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.125  Started container\n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 因返回结果过多,所以只截很小一部分")]),t._v("\n")])])]),a("h3",{attrs:{id:"nodeselector-匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodeselector-匹配"}},[t._v("#")]),t._v(" nodeSelector - 匹配")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeSelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env_role")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## env_role: dev, 是匹配带有这标签的node机器, 如果带有这标签的node节点有2台, 那么就会在这二台中选下部署")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl create -f pod2.yaml \npod/nginx created\n\n\nkubectl get pod\nNAME    READY   STATUS    RESTARTS   AGE\nnginx   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          115s\n\n\nkubectl describe pod nginx\n Type    Reason     Age    From                    Message\n  ----    ------     ----   ----                    -------\n  Normal  Scheduled  2m11s  default-scheduler       Successfully assigned default/nginx to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.126\n  Normal  Pulled     2m11s  kubelet, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.126  Container image "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v(" already present on machine\n  Normal  Created    2m10s  kubelet, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.126  Created container\n  Normal  Started    2m10s  kubelet, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".0.126  Started container\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 因返回结果过多,所以只截很小一部分")]),t._v("\n")])])]),a("h1",{attrs:{id:"故障排查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#故障排查"}},[t._v("#")]),t._v(" "),a("strong",[t._v("故障排查")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s1.ax1x.com/2020/04/28/J5YgsI.png",alt:"J5YgsI.png"}})]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kubectl describe TYPE/NAME\nkubectl logs TYPE/NAME "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-c CONTAINER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nkubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" POD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-c CONTAINER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --COMMAND "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);