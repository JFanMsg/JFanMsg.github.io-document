(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{440:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_6-str字符串数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-str字符串数据类型"}},[t._v("#")]),t._v(" 6.str字符串数据类型")]),t._v(" "),a("h1",{attrs:{id:"字符串-str-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串-str-string"}},[t._v("#")]),t._v(" 字符串 (str / string)")]),t._v(" "),a("p",[t._v("字符串使用格式：在python中字符串使用双引号，单引号，三引号，引起来的内容就称为字符串")]),t._v(" "),a("h2",{attrs:{id:"字符串操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作"}},[t._v("#")]),t._v(" 字符串操作")]),t._v(" "),a("h3",{attrs:{id:"字符串相加操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串相加操作"}},[t._v("#")]),t._v(" 字符串相加操作")]),t._v(" "),a("p",[t._v("格式：变量 + 变量 或 变量 = 变量 + 变量")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("wo1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好！'")]),t._v("\nwo2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' 世界'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wo1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("wo2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n你好！ 世界\n")])])]),a("h3",{attrs:{id:"字符串复制操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串复制操作"}},[t._v("#")]),t._v(" 字符串复制操作")]),t._v(" "),a("p",[t._v("格式：变量 * 次数  或  变量 = 变量 * 次数")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("wo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'你好！ 世界\\n'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n你好！ 世界\n你好！ 世界\n你好！ 世界\n")])])]),a("p",[t._v("​\t以上实例，我在字符串中加了换行符，如果没加，3遍字符串就会输出在同一行")]),t._v(" "),a("h2",{attrs:{id:"切片跟索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切片跟索引"}},[t._v("#")]),t._v(" 切片跟索引")]),t._v(" "),a("h3",{attrs:{id:"索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),a("p",[t._v("索引也称为下标，在python中索引也是下标是从0开始")]),t._v(" "),a("p",[t._v("反向索引：python中反向索引是从-1开始")]),t._v(" "),a("p",[t._v("索引就是字符串的下标位置")]),t._v(" "),a("p",[t._v("通过索引获取到的内容，其内容还是字符串类型")]),t._v(" "),a("p",[t._v("格式：变量[下标值]")]),t._v(" "),a("p",[a("strong",[t._v("索引实例")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n界\n")])])]),a("p",[t._v("​\t以上的实例，获取到了下标为1的字符")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\nIndexError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string index out of "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),t._v("\n")])])]),a("p",[t._v("​\t以上的实例，通过下标值获取字符的范围超过字符串的整体范围，所以报错了")]),t._v(" "),a("p",[a("strong",[t._v("反向索引实例")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n？\n")])])]),a("p",[t._v("​\t以上的实例：运用反向索引，下标值为-1，获取到了最后一位的字符")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n世\n")])])]),a("p",[t._v("​\t以上的实例：使用下标值为-0，-0这下标值在python中相等于0，-0=0")]),t._v(" "),a("h3",{attrs:{id:"切片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切片"}},[t._v("#")]),t._v(" 切片")]),t._v(" "),a("p",[t._v("切片可以对字符串进行截取取值，从0开始，反向切片从-1开始")]),t._v(" "),a("p",[t._v("反向切片，默认是从左向右切")]),t._v(" "),a("p",[t._v("特点：起始值可取，结束值不可取")]),t._v(" "),a("p",[t._v("格式：变量[起始位置 : 结束位置]")]),t._v(" "),a("p",[a("strong",[t._v("实例：")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n世界\n")])])]),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n世界不去\n")])])]),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n你不去走走？\n")])])]),a("p",[t._v("​\t如果结束位置不填，默认到结尾")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n世界这么多\n")])])]),a("p",[t._v("​\t如果起始位置不填，默认从开头开始")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n世界这么多，你不去走走？\n")])])]),a("p",[t._v("​\t如果起始跟结束位置都不填写，默认从头到尾执行")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n走走\n")])])]),a("p",[t._v("​\t反向切片")]),t._v(" "),a("h4",{attrs:{id:"步长"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步长"}},[t._v("#")]),t._v(" 步长")]),t._v(" "),a("p",[t._v("步长，可以在指定范围内，每几个取一个值")]),t._v(" "),a("p",[t._v("反向步长，以右向左方向取值")]),t._v(" "),a("p",[t._v("格式：变量[起始位置 : 结束位置 : 步长]")]),t._v(" "),a("p",[a("strong",[t._v("实例：")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n世这多\n")])])]),a("p",[t._v("​\t每走二步，取一个值")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n世这多你去走\n")])])]),a("p",[t._v("从0位置到结尾位置，每二步为一组，每一组取第一位值")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n去你多这\n")])])]),a("p",[t._v("反向步长，从8位置以反方向2位置开始，每二步为一组，每一组取第一位值")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"世界这么多，你不去走走？"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n？走不\n")])])]),a("h2",{attrs:{id:"迭代"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代"}},[t._v("#")]),t._v(" 迭代")]),t._v(" "),a("p",[t._v("可以使用for循环来便利或获取 字符串中的每一个字符")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 变量量 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 可迭代对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n")])])]),a("p",[t._v("​\t可迭代对象: 可以⼀一个⼀一个往外取值的对象")]),t._v(" "),a("p",[t._v("便利或获取字符串的字符，一般使用for循环，也有用while循环的")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"there is only one line difference between genius and madman.是吗"')]),t._v("\ns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    \nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"there is only one line difference between genius and madman.是吗"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("​\t以上的实例，就看得出 for 跟 while的区别")]),t._v(" "),a("h2",{attrs:{id:"字符串的内置函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的内置函数"}},[t._v("#")]),t._v(" 字符串的内置函数")]),t._v(" "),a("p",[t._v("字符串是不可变的对象，所有任何操作对原字符串是不会有任何的影响")]),t._v(" "),a("h3",{attrs:{id:"英文互转函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#英文互转函数"}},[t._v("#")]),t._v(" 英文互转函数")]),t._v(" "),a("h4",{attrs:{id:"首字母变成大写-capitalize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首字母变成大写-capitalize"}},[t._v("#")]),t._v(" 首字母变成大写-capitalize()")]),t._v(" "),a("p",[t._v("让字符串中第一位字母，如果是小写，就变成大写")]),t._v(" "),a("p",[t._v("格式：变量.capitalize()  或 变量 = 变量.capitalize()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"there is only one line difference between genius and madman. 是吗"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("capitalize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\nThere "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" only one line difference between genius "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" madman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 是吗\n")])])]),a("h4",{attrs:{id:"转成大写-upper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转成大写-upper"}},[t._v("#")]),t._v(" 转成大写-upper()")]),t._v(" "),a("p",[t._v("将字符串中的全部小写字母变成大写")]),t._v(" "),a("p",[t._v("格式：变量.upper() 或 变量 = 变量.upper()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"there is only one line difference between genius and madman.是吗"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("upper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\nTHERE IS ONLY ONE LINE DIFFERENCE BETWEEN GENIUS AND MADMAN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("是吗\n")])])]),a("h4",{attrs:{id:"转成小写-lower"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转成小写-lower"}},[t._v("#")]),t._v(" 转成小写-lower()")]),t._v(" "),a("p",[t._v("将字符串中的全部大写字母变成小写")]),t._v(" "),a("p",[t._v("格式：变量.lower() 或 变量 = 变量.lower()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman.是吗"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\nthere "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" only one line difference between genius "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" madman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("是吗\n")])])]),a("h4",{attrs:{id:"实例-验证码登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-验证码登录"}},[t._v("#")]),t._v(" 实例：验证码登录")]),t._v(" "),a("p",[t._v("验证码登录，要求把验证码强制转成小写字母")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jxPT"')]),t._v("\nwo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入验证码%s："')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" wo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"登录成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"验证码错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"英文字母大小写互换-swapcase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#英文字母大小写互换-swapcase"}},[t._v("#")]),t._v(" 英文字母大小写互换-swapcase()")]),t._v(" "),a("p",[t._v("就是把字符串中的，大写字母转成小写字母，小写字母转成大写字母")]),t._v(" "),a("p",[t._v("格式：变量.swapcase()  或 变量 =  变量.swapcase()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman.是吗"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("swapcase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\ntHERE iS oNLY oNE lINE dIFFERENCE bETWEEN gENIUS aND mADMAN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("是吗\n")])])]),a("h4",{attrs:{id:"转成小写-不常用-casefold"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转成小写-不常用-casefold"}},[t._v("#")]),t._v(" 转成小写(不常用)-casefold()")]),t._v(" "),a("p",[t._v("将字符串中的全部大写字母变成小写，跟上面的lower()函数功能差不多")]),t._v(" "),a("p",[t._v("lower() 跟 casefold() 区别")]),t._v(" "),a("ol",[a("li",[t._v("lower() 对某些字符支持不够好")]),t._v(" "),a("li",[t._v("casefold() 对所有字母都生效，如东欧的一些字母等")])]),t._v(" "),a("p",[t._v("格式：变量.casefold()  或 变量 = 变量.casefold()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman.是吗"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("casefold"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\nthere "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" only one line difference between genius "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" madman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("是吗\n")])])]),a("p",[t._v("​\t以上实例，执行后的结果跟上面的 lower() 函数差不多，请看下面的实例")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"БBß"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 俄美德")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"没有加函数的结果："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lower() 函数的结果："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"casefold() 函数的结果："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("casefold"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n没有加函数的结果： БBß\nlower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 函数的结果： бbß\ncasefold"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 函数的结果： бbss\n")])])]),a("h4",{attrs:{id:"以特殊字符隔开的首字母大写-不常用-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以特殊字符隔开的首字母大写-不常用-title"}},[t._v("#")]),t._v(" 以特殊字符隔开的首字母大写(不常用)-title()")]),t._v(" "),a("p",[t._v("在字符串中，每个被特殊字符隔开的字母，首字母大写")]),t._v(" "),a("p",[t._v("注意：在title() 函数中，中文也是特殊字符")]),t._v(" "),a("p",[t._v("格式：变量.title() 或 变量 = 变量.title()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"there is only one line difference between genius and madman.是吗"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\nThere Is Only One Line Difference Between Genius And Madman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("是吗\n")])])]),a("p",[t._v("​\t以上实例，空格为特殊字母，所以每个空格后第一个字母变成大写")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"there is only one line differ是吗ence between genius and madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\nThere Is Only One Line Differ是吗Ence Between Genius And Madman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例：空格跟中文为特殊字母，所以每个空格或中文后第一个字母变成大写")]),t._v(" "),a("h3",{attrs:{id:"切法函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切法函数"}},[t._v("#")]),t._v(" 切法函数")]),t._v(" "),a("h4",{attrs:{id:"指定长度-居中-center"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定长度-居中-center"}},[t._v("#")]),t._v(" 指定长度-居中-center()")]),t._v(" "),a("p",[t._v("字符串中，指定字符串长度，如果字符串长度没有那么长，原字符串数据居中后直接自动填充")]),t._v(" "),a("p",[t._v("如果不指定填充的字符，python默认是以空格填补")]),t._v(" "),a("p",[t._v('格式：变量.center(长度数,"填充字符") 或 变量 = 变量.center(长度数,"填充字符")')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主最帅"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n   博主最帅   \n")])])]),a("p",[t._v("​\t以上实例，如果不指定填充字符，默认以空格填充")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主最帅"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("博主最帅"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，指定了 * 字符为填充字符")]),t._v(" "),a("h4",{attrs:{id:"指定长度-居左-ljust"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定长度-居左-ljust"}},[t._v("#")]),t._v(" 指定长度-居左-ljust()")]),t._v(" "),a("p",[t._v("字符串中，指定字符串长度，如果字符串长度没有那么长，原字符串数据居左后直接自动填充")]),t._v(" "),a("p",[t._v("如果不指定填充的字符，python默认是以空格填补")]),t._v(" "),a("p",[t._v('格式：变量.ljust(长度数,"填充字符") 或 变量 = 变量.ljust(长度数,"填充字符")')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主最帅"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ljust"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n博主最帅      \n")])])]),a("p",[t._v("​\t以上实例，如果不指定填充字符，默认以空格填充")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主最帅"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ljust"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n博主最帅"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，指定了 * 字符为填充字符")]),t._v(" "),a("h4",{attrs:{id:"指定长度-居右-rjust"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定长度-居右-rjust"}},[t._v("#")]),t._v(" 指定长度-居右-rjust()")]),t._v(" "),a("p",[t._v("字符串中，指定字符串长度，如果字符串长度没有那么长，原字符串数据居右后直接自动填充")]),t._v(" "),a("p",[t._v("如果不指定填充的字符，python默认是以空格填补")]),t._v(" "),a("p",[t._v('格式：变量.rjust(长度数,"填充字符") 或 变量 = 变量.rjust(长度数,"填充字符")')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主最帅"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rjust"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n      博主最帅\n")])])]),a("p",[t._v("​\t以上实例，如果不指定填充字符，默认以空格填充")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主最帅"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rjust"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("博主最帅\n")])])]),a("p",[t._v("​\t以上实例，指定了 * 字符为填充字符")]),t._v(" "),a("h4",{attrs:{id:"指定-t-字符的长度-expandtabs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定-t-字符的长度-expandtabs"}},[t._v("#")]),t._v(" 指定 \\t 字符的长度-expandtabs()")]),t._v(" "),a("p",[t._v("可以指定\\t的长度，默认长度是8")]),t._v(" "),a("p",[t._v("格式：变量.expandtabs(指定长度) 或 变量 = 变量.expandtabs(指定长度)")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主最\\t帅"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expandtabs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n博主最       帅\n")])])]),a("h4",{attrs:{id:"去除空格-左右-strip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去除空格-左右-strip"}},[t._v("#")]),t._v(" 去除空格-左右-strip()")]),t._v(" "),a("p",[t._v("去除左右两端的空格，就是去除开头跟结尾的空格")]),t._v(" "),a("p",[t._v("strip() 函数还有去除字符的做作，默认是去除空格")]),t._v(" "),a("p",[t._v("想要去除指定的字符，注意：只能去除左右两端")]),t._v(" "),a("p",[t._v("格式：变量.strip(默认或指定字符) 或 变量 = 变量.strip(默认或指定字符)")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 博主 最帅 "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n博主 最帅\n")])])]),a("p",[t._v("​\t默认去除空格")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主 最帅 博主"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n 最帅 \n")])])]),a("p",[t._v("​\t指定字符去除")]),t._v(" "),a("h4",{attrs:{id:"去除空格-左边-lstrip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去除空格-左边-lstrip"}},[t._v("#")]),t._v(" 去除空格-左边-lstrip()")]),t._v(" "),a("p",[t._v("去除左右两端的空格，就是去除开头跟结尾的空格")]),t._v(" "),a("p",[t._v("strip() 函数还有去除字符的做作，默认是去除空格")]),t._v(" "),a("p",[t._v("想要去除指定的字符，注意：只能去除左边端")]),t._v(" "),a("p",[t._v("格式：变量.lstrip(默认或指定字符) 或 变量 = 变量.lstrip(默认或指定字符)")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 博主 最帅 "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lstrip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n博主 最帅 \n")])])]),a("p",[t._v("默认去除空格")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主 最帅 博主"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lstrip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n 最帅 博主\n")])])]),a("p",[t._v("​\t指定字符去除")]),t._v(" "),a("h4",{attrs:{id:"去除空格-右边-rstrip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去除空格-右边-rstrip"}},[t._v("#")]),t._v(" 去除空格-右边-rstrip()")]),t._v(" "),a("p",[t._v("去除左右两端的空格，就是去除开头跟结尾的空格")]),t._v(" "),a("p",[t._v("strip() 函数还有去除字符的做作，默认是去除空格")]),t._v(" "),a("p",[t._v("想要去除指定的字符，注意：只能去除右边两端")]),t._v(" "),a("p",[t._v("格式：变量.rstrip(默认或指定字符) 或 变量 = 变量.rstrip(默认或指定字符)")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 博主 最帅 "')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rstrip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n 博主 最帅\n")])])]),a("p",[t._v("默认去除空格")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主 最帅 博主"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rstrip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n博主 最帅 \n")])])]),a("p",[t._v("​\t指定字符去除")]),t._v(" "),a("h4",{attrs:{id:"实例-用户登录-忽略空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-用户登录-忽略空格"}},[t._v("#")]),t._v(" 实例：用户登录，忽略空格")]),t._v(" "),a("p",[t._v("要求：模拟用户登录，忽略用户输入的空格值")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入用户名："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\npwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入密码："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" pwd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"登录成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"账号或密码错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n或\n\nuser "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入用户名："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\npwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入密码："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" pwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"登录成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"账号或密码错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"字符串替换-replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串替换-replace"}},[t._v("#")]),t._v(" 字符串替换-replace()")]),t._v(" "),a("p",[t._v("字符串替换，如果不指定替换数，默认是全替换")]),t._v(" "),a("p",[t._v("格式：")]),t._v(" "),a("ol",[a("li",[t._v('变量.replace("原字符串内存","要替换的内容",替换数)')]),t._v(" "),a("li",[t._v('变量 = 变量.replace("原字符串内存","要替换的内容",替换数)')])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("replace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"也许"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n也许 Is Only One Line Difference Between Genius And Madman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例：替换指定的字符，默认全替换")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There sssssss Is Only One Line Difference Between Genius And Madman."')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("replace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"S"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\nThere SSSSSSs Is Only One Line Difference Between Genius And Madman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例：指定替换数为6，超过6位后不替换")]),t._v(" "),a("h4",{attrs:{id:"字符串切割-split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串切割-split"}},[t._v("#")]),t._v(" 字符串切割-split()")]),t._v(" "),a("p",[t._v("字符串切割，根据指定的切割符进行切割，用什么字符切割，切割后字符就会消失")]),t._v(" "),a("p",[t._v("注意：如果切割是在开头或结尾，那就会出现空字符串")]),t._v(" "),a("p",[t._v("切割出来后的字符串，是以列表类型显示存放，字符还是字符串类型")]),t._v(" "),a("p",[t._v('格式：变量.split("切割符") 或 变量 = 变量.split("切割符")')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'There'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Is'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Only'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'One'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Line'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Difference'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Between'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Genius'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'And'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Madman.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，切割空格符，切割后空格就消失")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman. There"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' Is Only One Line Difference Between Genius And Madman. '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，提醒你：如果切割是在开头或结尾，那就会出现空字符串")]),t._v(" "),a("h4",{attrs:{id:"字符串指定字符插入-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串指定字符插入-join"}},[t._v("#")]),t._v(" 字符串指定字符插入-join()")]),t._v(" "),a("p",[t._v("将容器数据中的字符串使用制定的字符进行链接成一个字符串")]),t._v(" "),a("p",[t._v("join函数 可以把列表转成字符串")]),t._v(" "),a("p",[t._v("格式：'链接字符'.join(变量)  或  变量 = '链接字符'.join(变量)")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("wo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'业务：你好，大家好'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'老板：我好,全都好'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'医生：他好，我也好'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'___'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n业务：你好，大家好___老板：我好"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("全都好___医生：他好，我也好\n")])])]),a("h4",{attrs:{id:"实例-切割函数跟字符插入函数的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-切割函数跟字符插入函数的应用"}},[t._v("#")]),t._v(" 实例：切割函数跟字符插入函数的应用")]),t._v(" "),a("p",[t._v("使用split() 函数跟 join() 函数")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman. There"')]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n_ Is Only One Line Difference Between Genius And Madman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" _\n")])])]),a("h3",{attrs:{id:"格式化输出-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化输出-format"}},[t._v("#")]),t._v(" 格式化输出-format()")]),t._v(" "),a("p",[t._v("虽然python有站位符格式化输出，但是字符串类型也有个函数也是做格式化输出，功能差不多")]),t._v(" "),a("p",[a("strong",[t._v("三种格式：")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v('变量 = {}{}{}.format("值0","值1","值2")  ## 按左向右顺序输出')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我为{}，心情好就写{}，主要写{}文章"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文章"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"技术类"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n我为博主，心情好就写文章，主要写技术类文章\n")])])])]),t._v(" "),a("li",[a("p",[t._v('变量 = {1}{2}{0}.format("值1","值2","值0")  ## 按指定的顺序输出')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我为{1}，心情好就写{2}，主要写{0}文章"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文章"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"技术类"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n我为文章，心情好就写技术类，主要写博主文章\n")])])])]),t._v(" "),a("li",[a("p",[t._v('变量 = {名称}{名称}{名称}.format(名称="值",名称="值",名称="值")  ## 按指定的名称来输出')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我为{wo}，心情好就写{so}，主要写{xo}文章"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"博主"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("xo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"文章"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"技术类"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n我为博主，心情好就写技术类，主要写文章文章\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"查找函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找函数"}},[t._v("#")]),t._v(" 查找函数")]),t._v(" "),a("h4",{attrs:{id:"开头查找-startswith"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开头查找-startswith"}},[t._v("#")]),t._v(" 开头查找-startswith()")]),t._v(" "),a("p",[t._v("判断是否以指定的字符开头")]),t._v(" "),a("p",[t._v("返回值：如果是：True  ， 如果不是：False")]),t._v(" "),a("p",[t._v('格式：变量.startswith("字符") 或 变量 = 变量.startswith("字符")')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startswith"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),a("h4",{attrs:{id:"结尾查找-endswith"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结尾查找-endswith"}},[t._v("#")]),t._v(" 结尾查找-endswith()")]),t._v(" "),a("p",[t._v("判断是否以指定的字符结尾")]),t._v(" "),a("p",[t._v("返回值：如果是：True  ， 如果不是：False")]),t._v(" "),a("p",[t._v('格式：变量.endswith("字符") 或 变量 = 变量.endswith("字符")')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endswith"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Madman."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),a("h4",{attrs:{id:"查找字符出现次数-count"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找字符出现次数-count"}},[t._v("#")]),t._v(" 查找字符出现次数-count()")]),t._v(" "),a("p",[t._v("查找指定的字符出现的次数")]),t._v(" "),a("p",[t._v("返回值，如果有：输出次数  ，  如果没有：输出0")]),t._v(" "),a("p",[t._v('格式：变量.count("字符")  或  变量 = 变量.count("字符")')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n结果：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("p",[t._v("​\t以上的实例，查找 s 字符在字符串出现过几次，出现了2次")]),t._v(" "),a("h4",{attrs:{id:"查找字符出现的位置-find"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找字符出现的位置-find"}},[t._v("#")]),t._v(" 查找字符出现的位置-find")]),t._v(" "),a("p",[t._v("查找指定的字符的位置，也能指定范围找指定的字符位置")]),t._v(" "),a("p",[t._v("返回值：如果找得到：返回位置  ， 如果找不到：返回 -1")]),t._v(" "),a("p",[t._v('格式：变量.find("字符",开始位置,结尾位置) 或 变量 = 变量.find("字符",开始位置,结尾位置)')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，查找到 s 字符在7位中")]),t._v(" "),a("p",[t._v("​\t注意：只要查找到，就会马上返回，不会查找后面的 s 字符")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("47")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，指定了查找的开始位置，没有指定结尾位置，默认是直接查找到结尾")]),t._v(" "),a("h4",{attrs:{id:"查找字符出现的位置-报错-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找字符出现的位置-报错-index"}},[t._v("#")]),t._v(" 查找字符出现的位置(报错)-index()")]),t._v(" "),a("p",[t._v("查找指定的字符的位置，也能指定范围找指定的字符位置")]),t._v(" "),a("p",[t._v("功能跟find() 函数一样，唯一不一样的就是，fin() 没结果是返回 -1 ，index() 没结果是直接报错")]),t._v(" "),a("p",[t._v("返回值：如果找得到：返回位置  ， 如果找不到：直接程序报错")]),t._v(" "),a("p",[t._v('格式：变量.index("字符",开始位置,结尾位置) 或 变量 = 变量.index("字符",开始位置,结尾位置)')]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，查找到 s 字符在7位中")]),t._v(" "),a("p",[t._v("​\t注意：只要查找到，就会马上返回，不会查找后面的 s 字符")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("47")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，指定了查找的开始位置，没有指定结尾位置，默认是直接查找到结尾")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## index()函数")]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'世界'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n结果：\nValueError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" substring "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" found\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## find()函数")]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"There Is Only One Line Difference Between Genius And Madman."')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("find"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'世界'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n结果：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[t._v("​\t以上实例，很明显的表达出 find()函数跟 index()函数的区别")]),t._v(" "),a("h3",{attrs:{id:"条件判断函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件判断函数"}},[t._v("#")]),t._v(" 条件判断函数")]),t._v(" "),a("h4",{attrs:{id:"计算字符串长度-len"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算字符串长度-len"}},[t._v("#")]),t._v(" 计算字符串长度 -len()")]),t._v(" "),a("p",[t._v("用于计算字符串串的⻓，长度，从 1 开始算")]),t._v(" "),a("p",[t._v("len() 函数运行实际是调用python内部的 "),a("strong",[t._v("len")]),t._v("()函数")]),t._v(" "),a("p",[t._v("格式：len(变量) 或 变量 = len(变量)")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"一二三"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h4",{attrs:{id:"判断是否由大写字母组成-isupper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断是否由大写字母组成-isupper"}},[t._v("#")]),t._v(" 判断是否由大写字母组成-isupper()")]),t._v(" "),a("p",[t._v("检测一个字符串中的数据是否都是大写字母组成，符号不算")]),t._v(" "),a("p",[t._v("返回值：是：True ， 否：False")]),t._v(" "),a("p",[t._v("格式：变量.isupper()  或  变量 = 变量.isupper()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HELLO！WORLD"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isupper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v(" \n")])])]),a("h4",{attrs:{id:"判断是否由小写字母组成-islower"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断是否由小写字母组成-islower"}},[t._v("#")]),t._v(" 判断是否由小写字母组成-islower()")]),t._v(" "),a("p",[t._v("检测一个字符串中的数据是否都是小写字母组成，符号不算")]),t._v(" "),a("p",[t._v("返回值：是：True ， 否：False")]),t._v(" "),a("p",[t._v("格式：变量.islower()  或  变量 = 变量.islower()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello！world"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("islower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v(" \n")])])]),a("h4",{attrs:{id:"判断是否由字母、数字、文字组成-isalnum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断是否由字母、数字、文字组成-isalnum"}},[t._v("#")]),t._v(" 判断是否由字母、数字、文字组成-isalnum()")]),t._v(" "),a("p",[t._v("检测一个字符串中的数据是否都是字母、数字、文字组成，符号不算")]),t._v(" "),a("p",[t._v("返回值：是：True ， 否：False")]),t._v(" "),a("p",[t._v("格式：变量.isalnum()  或  变量 = 变量.isalnum()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ThereIsOnlyOneLineDifferenceBetweenGeniusAndMadman人1"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isalnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v(" \n")])])]),a("h4",{attrs:{id:"判断是否由字母、文字组成-isalpha"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断是否由字母、文字组成-isalpha"}},[t._v("#")]),t._v(" 判断是否由字母、文字组成-isalpha()")]),t._v(" "),a("p",[t._v("检测一个字符串中的数据是否都是字母、文字组成6，符号不算")]),t._v(" "),a("p",[t._v("返回值：是：True ， 否：False")]),t._v(" "),a("p",[t._v("格式：变量.isalpha()  或  变量 = 变量.isalpha()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ThereIsOnlyOneLineDifferenceBetweenGeniusAndMadman是吗"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isalpha"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v(" \n")])])]),a("h4",{attrs:{id:"判断是不是数字组成-isdigit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断是不是数字组成-isdigit"}},[t._v("#")]),t._v(" 判断是不是数字组成 - isdigit()")]),t._v(" "),a("p",[t._v("检测一个字符串中的数据是否由纯数字组成，十进制，符号不算")]),t._v(" "),a("p",[t._v("返回值：是：True  ， 否：False")]),t._v(" "),a("p",[t._v("格式：变量.isdigit() 或 变量 = 变量.isdigit()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"121345"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isdigit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),a("h4",{attrs:{id:"判断是不是数字组成-isdecimal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断是不是数字组成-isdecimal"}},[t._v("#")]),t._v(" 判断是不是数字组成 - isdecimal()")]),t._v(" "),a("p",[t._v("检测一个字符串中的数据是否由纯数字组成，数字整数，符号不算")]),t._v(" "),a("p",[t._v("返回值：是：True  ， 否：False")]),t._v(" "),a("p",[t._v("格式：变量.isdecimal() 或 变量 = 变量.isdecimal()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"121345"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isdecimal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),a("h4",{attrs:{id:"判断是不是数字组成-isnumeric"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断是不是数字组成-isnumeric"}},[t._v("#")]),t._v(" 判断是不是数字组成 - isnumeric()")]),t._v(" "),a("p",[t._v("检测一个字符串中的数据是否由纯数字组成，可以识别中文数字，符号不算")]),t._v(" "),a("p",[t._v("返回值：是：True  ， 否：False")]),t._v(" "),a("p",[t._v("格式：变量.isnumeric() 或 变量 = 变量.isnumeric()")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"一二三"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isnumeric"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),a("h4",{attrs:{id:"实例-模拟10086电话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-模拟10086电话"}},[t._v("#")]),t._v(" 实例：模拟10086电话")]),t._v(" "),a("p",[t._v("需要判断输入的值是不是数字")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入指定的数字："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isdigit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n    欢迎致电10086客服专线：\n    1. 话费查询\n    2. 业务办理\n    3. 宽带办理\n    4. 站点查询\n    5. 人工服务\n'''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请选择服务："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isdigit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" wo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请稍等"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" wo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请输入数字"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"实例-for循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-for循环"}},[t._v("#")]),t._v(" 实例：for循环")]),t._v(" "),a("p",[t._v("要求：便利一遍字符串，如果有数字，输出出来")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("so "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the1re is on2ly one li3ne dif4feren5ce b6etwee7n geniu8s and mad9man.是吗"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isdigit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n")])])]),a("h3",{attrs:{id:"过滤函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤函数"}},[t._v("#")]),t._v(" 过滤函数")]),t._v(" "),a("h4",{attrs:{id:"制作字典-maketrans"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#制作字典-maketrans"}},[t._v("#")]),t._v(" 制作字典-maketrans()")]),t._v(" "),a("p",[t._v("制作用于字符串替换的映射表（制作字典）")]),t._v(" "),a("h4",{attrs:{id:"替换操作-translate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换操作-translate"}},[t._v("#")]),t._v(" 替换操作-translate()")]),t._v(" "),a("p",[t._v("进行字符串替换操作（替换操作）")]),t._v(" "),a("h4",{attrs:{id:"实例-敏感字过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-敏感字过滤"}},[t._v("#")]),t._v(" 实例：敏感字过滤")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("wo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'心态很重要，如果心态没把握好，很容易爆粗话，比如：草泥马'")]),t._v("\nso "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maketrans"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'草泥马'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'***'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("translate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("so"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("do"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n结果：\n心态很重要，如果心态没把握好，很容易爆粗话，比如："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n")])])]),a("p",[t._v("​\t在以上实例，在maketrans函数中替换的值，是一对一的")])])}),[],!1,null,null,null);s.default=e.exports}}]);