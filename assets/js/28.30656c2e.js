(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{389:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_13-包的运用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-包的运用"}},[t._v("#")]),t._v(" 13. 包的运用")]),t._v(" "),a("h1",{attrs:{id:"go语言的包-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go语言的包-package"}},[t._v("#")]),t._v(" Go语言的包（package）")]),t._v(" "),a("p",[t._v("在工化的Go语言开发项目中，Go语言的源码复用是建立在包（package）基础之上的。本文介绍了Go语言中如何定义包、如何导出包的内容及如何导入其他包。")]),t._v(" "),a("h2",{attrs:{id:"包介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包介绍"}},[t._v("#")]),t._v(" 包介绍")]),t._v(" "),a("p",[a("code",[t._v("包（package）")]),t._v("是多个Go源码的集合，是一种高级的代码复用方案，Go语言为我们提供了很多内置包，如"),a("code",[t._v("fmt")]),t._v("、"),a("code",[t._v("os")]),t._v("、"),a("code",[t._v("io")]),t._v("等。")]),t._v(" "),a("p",[t._v("在GO语言中包的作用和其他语言中的库或模块作用类似，用于支持模块化、封装、编译隔离和重用，一个包的源代码保存在一个或多个以.go结尾的文件中，它所在目录名的尾部就是包的导入路径。")]),t._v(" "),a("p",[t._v("每个包给它声明提供独立的命名空间。例如，导入了image，想要用image包中的decode方法，那么使用方式为："),a("code",[t._v("image.decode")])]),t._v(" "),a("h2",{attrs:{id:"定义包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义包"}},[t._v("#")]),t._v(" 定义包")]),t._v(" "),a("p",[t._v("我们还可以根据自己的需要创建自己的包。一个包可以简单理解为一个存放"),a("code",[t._v(".go")]),t._v("文件的文件夹。 该文件夹下面的所有go文件都要在代码的第一行添加如下代码，声明该文件归属的包。")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" 包名\n")])])]),a("p",[t._v("注意事项：")]),t._v(" "),a("ol",[a("li",[t._v("一个文件夹下面直接包含的文件只能归属一个"),a("code",[t._v("package")]),t._v("，同样一个"),a("code",[t._v("package")]),t._v("的文件不能在多个文件夹下。")]),t._v(" "),a("li",[t._v("包名可以不和文件夹的名字一样，包名不能包含 "),a("code",[t._v("-")]),t._v(" 符号。")]),t._v(" "),a("li",[t._v("包名为"),a("code",[t._v("main")]),t._v("的包为应用程序的入口包，这种包编译后会得到一个可执行文件，而编译不包含"),a("code",[t._v("main")]),t._v("包的源代码则不会得到可执行文件。")])]),t._v(" "),a("h2",{attrs:{id:"可见性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可见性"}},[t._v("#")]),t._v(" 可见性")]),t._v(" "),a("p",[t._v("如果想在一个包中引用另外一个包里的标识符（如变量、常量、类型、函数等）时，该标识符必须是对外可见的（public）。在Go语言中只需要将标识符的首字母大写就可以让标识符对外可见了。")]),t._v(" "),a("p",[a("strong",[t._v("举例")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" pkg2\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包变量可见性")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首字母小写，外部包不可见，只能在当前包内使用")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首字母大写外部包可见，可在其他包中使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Mode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首字母小写，外部包不可见，只能在当前包内使用")]),t._v("\n\tname "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首字母大写，外部包可见，可在其他包中使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首字母小写，外部包不可见，只能在当前包内使用")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数局部变量，外部包不可见，只能在当前函数内使用")]),t._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("结构体中的字段名和接口中的方法名如果首字母都是大写，外部包可以访问这些字段和方法。例如：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Student "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tName  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可在包外访问的方法")]),t._v("\n\tclass "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//仅限包内访问的字段")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Payer "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//仅限包内访问的方法")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Pay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可在包外访问的方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"包的导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包的导入"}},[t._v("#")]),t._v(" 包的导入")]),t._v(" "),a("p",[t._v("要在代码中引用其他包的内容，需要使用"),a("code",[t._v("import")]),t._v("关键字导入使用的包。具体语法如下:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包的路径"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("注意事项：")])]),t._v(" "),a("ol",[a("li",[t._v("import导入语句通常放在文件开头包声明语句的下面。")]),t._v(" "),a("li",[t._v("导入的包名需要使用双引号包裹起来。")]),t._v(" "),a("li",[t._v("包名是从"),a("code",[t._v("$GOPATH/src/")]),t._v("后开始计算的，使用"),a("code",[t._v("/")]),t._v("进行路径分隔。")]),t._v(" "),a("li",[t._v("Go语言中禁止循环导入包。")])]),t._v(" "),a("h3",{attrs:{id:"单行导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单行导入"}},[t._v("#")]),t._v(" 单行导入")]),t._v(" "),a("p",[t._v("单行导入的格式如下：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包1"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包2"')]),t._v("\n")])])]),a("h3",{attrs:{id:"多行导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行导入"}},[t._v("#")]),t._v(" 多行导入")]),t._v(" "),a("p",[t._v("多行导入的格式如下：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包1"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包2"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"自定义包名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义包名"}},[t._v("#")]),t._v(" 自定义包名")]),t._v(" "),a("p",[t._v("在导入包名的时候，我们还可以为导入的包设置别名。通常用于导入的包名太长或者导入的包名冲突的情况。具体语法格式如下：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" 别名 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包的路径"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("单行导入方式定义别名")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/Q1mi/studygo/pkg_test"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("多行导入方式定义别名")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/Q1mi/studygo/pkg_test"')]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"匿名导入包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匿名导入包"}},[t._v("#")]),t._v(" 匿名导入包")]),t._v(" "),a("p",[t._v("如果只希望导入包，而不使用包内部的数据时，可以使用匿名导入包。具体的格式如下：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包的路径"')]),t._v("\n")])])]),a("p",[t._v("匿名导入的包与其他方式导入的包一样都会被编译到可执行文件中。")]),t._v(" "),a("h2",{attrs:{id:"init-初始化函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init-初始化函数"}},[t._v("#")]),t._v(" init()初始化函数")]),t._v(" "),a("h3",{attrs:{id:"init-函数介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init-函数介绍"}},[t._v("#")]),t._v(" init()函数介绍")]),t._v(" "),a("p",[t._v("在Go语言程序执行时导入包语句会自动触发包内部"),a("code",[t._v("init()")]),t._v("函数的调用。需要注意的是： "),a("code",[t._v("init()")]),t._v("函数没有参数也没有返回值。 "),a("code",[t._v("init()")]),t._v("函数在程序运行时自动被调用执行，不能主动去调用，它也是普通的函数，在每个文件里当程序启动的时候，"),a("code",[t._v("init()")]),t._v("按照声明的顺序自动执行")]),t._v(" "),a("p",[t._v("包初始化执行的顺序如下图所示："),a("img",{attrs:{src:"https://gitee.com/linux91/document-img/raw/master/img/init01.png",alt:"包中的init()执行时机"}})]),t._v(" "),a("h3",{attrs:{id:"init-函数执行顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init-函数执行顺序"}},[t._v("#")]),t._v(" init()函数执行顺序")]),t._v(" "),a("p",[t._v("Go语言包会从"),a("code",[t._v("main")]),t._v("包开始检查其导入的所有包，每个包中又可能导入了其他的包。Go编译器由此构建出一个树状的包引用关系，再根据引用顺序决定编译顺序，依次编译这些包的代码。")]),t._v(" "),a("p",[t._v("在运行时，被最后导入的包会最先初始化并调用其"),a("code",[t._v("init()")]),t._v("函数， 如下图示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/linux91/document-img/raw/master/img/init02.png",alt:"img"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);