(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{477:function(t,s,a){"use strict";a.r(s);var n=a(45),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_48-struct模块、hmac模块、处理tcp的粘包问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_48-struct模块、hmac模块、处理tcp的粘包问题"}},[t._v("#")]),t._v(" 48. struct模块、hmac模块、处理TCP的粘包问题")]),t._v(" "),a("h1",{attrs:{id:"struct模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#struct模块"}},[t._v("#")]),t._v(" struct模块")]),t._v(" "),a("p",[t._v("struct 模块是一个可以将任意大小的数字转换成一个固定长度编码的模块0")]),t._v(" "),a("p",[t._v("struct模块在这里也暂时不会说太多，")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("  unsigned 代表无符号 \n  \t有符号"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" 和 无符号"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("的区别\n  \t有符号表示的是"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个字节，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("位，最高位是符号位，所以有符号的变量，一个字节表示范围："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127")]),t._v("\n \t无符号表示的是"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个字节，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("位，所有位都是数值，所以无符号的便利，一个字节表示范围："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),t._v("和double\n  \t"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),t._v("表示单精度，一般的操作系统中表示为，将数值准确到小数点后 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("位\n  \tdouble表示双精度，一般的操作系统中表示为，将数值准确到小数点后"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("位\n\n  void 指的是无返回值类型，在python中没有这种类型的数据\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("    表示的是一级指针，指针的意思是：指向某一块内存地址\n")])])]),a("h2",{attrs:{id:"struct模块的简单使用说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#struct模块的简单使用说明"}},[t._v("#")]),t._v(" struct模块的简单使用说明")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("struct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 把指定的数据类型转换成固定长度的编码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# type：要转换的数据是什么类型的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# num：要转换的数据")]),t._v("\n\nstruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unpack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 把固定长度的编码转换成数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# type：要转换的许编码是什么类型的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# num：要转换的编码")]),t._v("\n")])])]),a("p",[t._v("基本用于什么场景")]),t._v(" "),a("p",[t._v("可以用于解决TCP在传输过程出现的粘包情况")]),t._v(" "),a("p",[t._v("通过统计要发送的数据的大小，使用struct模块进行编码，固定为四字节的编码，在让服务端先接收四个字节的数据，反编码得到要传输的数据大小，在按这个大小，限制接下来接收的数据的大小")]),t._v(" "),a("p",[t._v("这样就可以解决TCP的粘包问题")]),t._v(" "),a("h1",{attrs:{id:"hmac模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hmac模块"}},[t._v("#")]),t._v(" hmac模块")]),t._v(" "),a("p",[t._v("这个是另一种的加密算法模块")]),t._v(" "),a("p",[t._v("但是他跟hashib模块的不同之处")]),t._v(" "),a("ol",[a("li",[t._v("hashlib模块：加密出来是一个字符串")]),t._v(" "),a("li",[t._v("hmac模块：加密出来是bytes类型的数据")])]),t._v(" "),a("p",[t._v("l")]),t._v(" "),a("h2",{attrs:{id:"hmac模块的简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hmac模块的简单使用"}},[t._v("#")]),t._v(" hmac模块的简单使用")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("md5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hmac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("new"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("盐，需要加密的数据"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" md5_obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("digest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 这样就可以拿到加密后的密文了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 加密的密文是用mb5算法加密的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 注意：盐是需要bytes类型的数据")]),t._v("\n")])])]),a("p",[a("strong",[t._v("简单使用")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" hmac\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os\nlib "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("urandom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlib_b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"howo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmd5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hmac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("new"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lib_b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("digest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n执行结果：\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("b'8\\xf3}\\xc7\\xb4\\xfej\\xfe\\xe5\\x13\\xc0\\x85l\\x8b\\xb2\\xc2'")]),t._v("\n")])])]),a("h1",{attrs:{id:"练习题-进度条"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#练习题-进度条"}},[t._v("#")]),t._v(" 练习题 - 进度条")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\r'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'>'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("end"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 为什么要加上时间模块，加上时间模块，只是给大家看一下效果")]),t._v("\n")])])]),a("h1",{attrs:{id:"处理tcp粘包的思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理tcp粘包的思路"}},[t._v("#")]),t._v(" 处理TCP粘包的思路")]),t._v(" "),a("p",[t._v("这里只说思路，实现在下面的项目中会运用到")]),t._v(" "),a("p",[t._v("在准备传输数据的时候，先对数据进行序列化，在对数据进行统计，把统计结果交给struct模块进行编码，因为struct模块的编码无论是对多大的数据，编码出来的结果，都是4个字节，在把编码后的4个字节数据加上要传输的数据，传输给服务端")]),t._v(" "),a("p",[t._v("然后，让服务端先接收4个字节的数据，进行解码，出来客户端要传输的数据的大小，在进行接收，在接收的时候限制接收的大小")]),t._v(" "),a("p",[t._v("这样就可以有效的实现TCP无粘包现象")])])}),[],!1,null,null,null);s.default=r.exports}}]);